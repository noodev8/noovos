Customer adds items to their basket, and decides whether they want to choose a staff member for each or not

The query logic is then identified depending on their choice

----------------------------------------------------------------------------------------------------------
1 Service Item chosen
----------------------------------------------------------------------------------------------------------
SELECT
  id           AS slot_id,
  service_id,
  appuser_id   AS staff_id,
  slot_start,
  slot_end,
  slot_status
FROM available_slot
WHERE
  service_id = 23
  AND slot_status = 'available'
  AND slot_start::date BETWEEN '2025-04-19' AND '2025-04-19'
  AND (appuser_id = 10 OR 10 IS NULL)  -- optional staff member

  -- ðŸ•’ Optional morning/afternoon toggle (same pattern as before)
  AND (
    'morning' = 'any'
    OR ('morning' = 'morning' AND EXTRACT(HOUR FROM slot_start) < 12)
    OR ('morning' = 'afternoon' AND EXTRACT(HOUR FROM slot_start) >= 12)
  )
ORDER BY slot_start
LIMIT 5;



----------------------------------------------------------------------------------------------------------
2 Service items chosen
----------------------------------------------------------------------------------------------------------
SELECT
  s1.id AS slot_1_id, s1.service_id AS service_1, s1.appuser_id AS staff_1,
  s1.slot_start AS start_1, s1.slot_end AS end_1,

  s2.id AS slot_2_id, s2.service_id AS service_2, s2.appuser_id AS staff_2,
  s2.slot_start AS start_2, s2.slot_end AS end_2,

  s2.slot_start - s1.slot_end AS gap
FROM (
  SELECT *
  FROM available_slot
  WHERE
    service_id = 23
    AND slot_status = 'available'
    AND slot_start::date = '2025-04-19'
    AND (appuser_id = 10 OR 10 IS NULL)  -- staff_id_1

    -- ðŸ•’ Time preference toggle
    AND (
      'morning' = 'any'
      OR ('morning' = 'morning' AND EXTRACT(HOUR FROM slot_start) < 12)
      OR ('morning' = 'afternoon' AND EXTRACT(HOUR FROM slot_start) >= 12)
    )
) s1
JOIN (
  SELECT *
  FROM available_slot
  WHERE
    service_id = 24
    AND slot_status = 'available'
    AND slot_start::date = '2025-04-19'
    AND (appuser_id = 15 OR 15 IS NULL)  -- staff_id_2
) s2
  ON s1.slot_end <= s2.slot_start
  AND s1.slot_start::date = s2.slot_start::date
  AND s2.slot_start - s1.slot_end <= INTERVAL '30 minutes'
ORDER BY s1.slot_start
LIMIT 5;





----------------------------------------------------------------------------------------------------------
3 Service items chosen
----------------------------------------------------------------------------------------------------------
SELECT
  s1.id AS slot_1_id, s1.service_id AS service_1, s1.appuser_id AS staff_1,
  s1.slot_start AS start_1, s1.slot_end AS end_1,

  s2.id AS slot_2_id, s2.service_id AS service_2, s2.appuser_id AS staff_2,
  s2.slot_start AS start_2, s2.slot_end AS end_2,

  s3.id AS slot_3_id, s3.service_id AS service_3, s3.appuser_id AS staff_3,
  s3.slot_start AS start_3, s3.slot_end AS end_3,

  s2.slot_start - s1.slot_end AS gap_1_2,
  s3.slot_start - s2.slot_end AS gap_2_3
FROM (
  SELECT *
  FROM available_slot
  WHERE
    service_id = 23
    AND slot_status = 'available'
    AND slot_start::date = '2025-04-19'
    AND (appuser_id = 10 OR 10 IS NULL)  -- staff_id_1

    -- ðŸ•’ Time preference toggle:
    AND (
      'morning' = 'any'
      OR ('morning' = 'morning' AND EXTRACT(HOUR FROM slot_start) < 12)
      OR ('morning' = 'afternoon' AND EXTRACT(HOUR FROM slot_start) >= 12)
    )
) s1
JOIN (
  SELECT *
  FROM available_slot
  WHERE
    service_id = 24
    AND slot_status = 'available'
    AND slot_start::date = '2025-04-19'
    AND (appuser_id = 15 OR 15 IS NULL)  -- staff_id_2
) s2
  ON s1.slot_end <= s2.slot_start
  AND s1.slot_start::date = s2.slot_start::date
  AND s2.slot_start - s1.slot_end <= INTERVAL '30 minutes'
JOIN (
  SELECT *
  FROM available_slot
  WHERE
    service_id = 25
    AND slot_status = 'available'
    AND slot_start::date = '2025-04-19'
    AND (appuser_id = 18 OR 18 IS NULL)  -- staff_id_3
) s3
  ON s2.slot_end <= s3.slot_start
  AND s2.slot_start::date = s3.slot_start::date
  AND s3.slot_start - s2.slot_end <= INTERVAL '30 minutes'
ORDER BY s1.slot_start
LIMIT 5;

